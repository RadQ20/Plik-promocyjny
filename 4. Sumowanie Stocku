function sumujWartosciZKolumnyStockZFormulami() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  const lastRow = sheet.getLastRow();
  const headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];

  // Szukamy numerów kolumn po nazwach
  const kolStock = headers.indexOf("Stock") + 1;
  const kolSumaStock = headers.indexOf("Suma Stock") + 1;

  if (kolStock === 0 || kolSumaStock === 0) {
    throw new Error('Nie znaleziono kolumny "Stock" lub "Suma Stock" w wierszu 1.');
  }

  const zakresSumaStock = sheet.getRange(2, kolSumaStock, lastRow - 1);
  const mergedRanges = zakresSumaStock.getMergedRanges();

  const scaloneWiersze = new Set();

  // Dla scalonych wierszy – formuła SUMA
  mergedRanges.forEach(range => {
    const startRow = range.getRow();
    const numRows = range.getNumRows();
    const zakresFormuly = `R${startRow}C${kolStock}:R${startRow + numRows - 1}C${kolStock}`;
    const formula = `=SUM(${zakresFormuly})`;

    sheet.getRange(startRow, kolSumaStock).setFormulaR1C1(formula);

    for (let i = startRow; i < startRow + numRows; i++) {
      scaloneWiersze.add(i);
    }
  });

  // Dla niescalonych wierszy – formuła do jednej komórki
  for (let row = 2; row <= lastRow; row++) {
    if (!scaloneWiersze.has(row)) {
      const formula = `=R[0]C[-${kolSumaStock - kolStock}]`;
      sheet.getRange(row, kolSumaStock).setFormulaR1C1(formula);
    }
  }
}
