function sumujSprzedazProduktuZFormulami() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  const lastRow = sheet.getLastRow();
  const headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];

  const kolSprzedazWariantu = headers.indexOf("Sprzedaż wariantu") + 1;
  const kolSprzedazProduktu = headers.indexOf("Sprzedaż produktu") + 1;

  if (kolSprzedazWariantu === 0 || kolSprzedazProduktu === 0) {
    throw new Error('Nie znaleziono kolumn "Sprzedaż wariantu" lub "Sprzedaż produktu".');
  }

  const zakresSprzedazProduktu = sheet.getRange(2, kolSprzedazProduktu, lastRow - 1);
  const mergedRanges = zakresSprzedazProduktu.getMergedRanges();
  const scaloneWiersze = new Set();

  // Obsługa scalonych wierszy — formuła z SUMA
  mergedRanges.forEach(range => {
    const startRow = range.getRow();
    const numRows = range.getNumRows();
    const zakresFormuly = `R${startRow}C${kolSprzedazWariantu}:R${startRow + numRows - 1}C${kolSprzedazWariantu}`;
    const formula = `=SUM(${zakresFormuly})`;

    sheet.getRange(startRow, kolSprzedazProduktu).setFormulaR1C1(formula);

    for (let i = startRow; i < startRow + numRows; i++) {
      scaloneWiersze.add(i);
    }
  });

  // Obsługa niescalonych wierszy — formuła z odwołaniem bezwzględnym do właściwej kolumny
  for (let row = 2; row <= lastRow; row++) {
    if (!scaloneWiersze.has(row)) {
      const formula = `=R${row}C${kolSprzedazWariantu}`;
      sheet.getRange(row, kolSprzedazProduktu).setFormulaR1C1(formula);
    }
  }
}
