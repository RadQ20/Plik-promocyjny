function obliczProcentSprzedazyProduktuUwzgledniajacScalenia() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  const lastRow = sheet.getLastRow();
  const headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];

  const kolumnaSprzedazProduktuIdx = headers.indexOf("Sprzedaż produktu") + 1;
  const kolumnaSumaStockIdx = headers.indexOf("Suma stock") + 1;
  const kolumnaProcentSprzedazyIdx = headers.indexOf("% Sprzedaży produktu") + 1;

  if (
    kolumnaSprzedazProduktuIdx === 0 ||
    kolumnaSumaStockIdx === 0 ||
    kolumnaProcentSprzedazyIdx === 0
  ) {
    throw new Error('Nie znaleziono jednej z kolumn: "Sprzedaż produktu", "Suma stock" lub "% Sprzedaży produktu" w wierszu 1.');
  }

  const zakresProcentSprzedazy = sheet.getRange(2, kolumnaProcentSprzedazyIdx, lastRow - 1);
  const mergedRanges = zakresProcentSprzedazy.getMergedRanges();
  const scaloneWierszeDoPominiecia = new Set();

  // Formatowanie kolumny jako procent z dwoma miejscami po przecinku
  sheet.getRange(2, kolumnaProcentSprzedazyIdx, lastRow - 1)
       .setNumberFormat("0.00%");

  mergedRanges.forEach(range => {
    const startRow = range.getRow();
    const numRows = range.getNumRows();

    for (let i = 0; i < numRows; i++) {
      const wiersz = startRow + i;
      if (wiersz !== startRow) {
        scaloneWierszeDoPominiecia.add(wiersz);
      }
    }

    const formuła = `=${literaKolumny(kolumnaSprzedazProduktuIdx)}${startRow}/${literaKolumny(kolumnaSumaStockIdx)}${startRow}`;
    sheet.getRange(startRow, kolumnaProcentSprzedazyIdx).setFormula(formuła);
  });

  for (let row = 2; row <= lastRow; row++) {
    if (!scaloneWierszeDoPominiecia.has(row)) {
      const formuła = `=${literaKolumny(kolumnaSprzedazProduktuIdx)}${row}/${literaKolumny(kolumnaSumaStockIdx)}${row}`;
      sheet.getRange(row, kolumnaProcentSprzedazyIdx).setFormula(formuła);
    }
  }
}

// Pomocnicza funkcja: indeks kolumny → litera kolumny (np. 1 → A)
function literaKolumny(index) {
  let litery = '';
  while (index > 0) {
    let reszta = (index - 1) % 26;
    litery = String.fromCharCode(65 + reszta) + litery;
    index = Math.floor((index - 1) / 26);
  }
  return litery;
}
